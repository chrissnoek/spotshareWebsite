{"version":3,"sources":["webpack:///./src/Profile.jsx"],"names":["UserProfile","props","profile","setProfile","useState","history","useHistory","getInitialProfile","_profile","store","initialData","fetchData","match","getProfile","useConstructor","useEffect","updateFollow","followId","query","profileFollowersArray","followers","map","following","id","action","includes","push","index","indexOf","splice","variables","input","where","data","prevProfile","newFollowArray","graphQLFetch","errors","console","log","CreateNotification","deletePhoto","photos","newList","value","user","search","showError","params","slug","result","users","UserProfileComponent","curUser","isServer","setIsServer","followCount","length","filterResult","filter","followsUser","numberOfLikes","i","likes","username","location","followings","photo","favouriteLocations"],"mappings":"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","file":"server.c362a1e2a34a3a8ed956.hot-update.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport graphQLFetch from \"./graphQLFetch.js\";\nimport store from \"./store.js\";\nimport { FiEdit2, FiPlus } from \"react-icons/fi\";\nimport { MdEdit } from \"react-icons/md\";\nimport { TiLocation } from \"react-icons/ti\";\nimport { userContext } from \"./services/userContext.js\";\nimport { PhotoView } from \"./PhotoCarousel.jsx\";\nimport { Link } from \"react-router-dom\";\nimport FollowButton from \"./components/followButton.jsx\";\nimport useConstructor from \"./components/ConstructorHook.jsx\";\nimport UserProfilePicture from \"./components/UserProfilePicture.jsx\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport CreateNotification from \"./components/CreateNotification.jsx\";\nimport LocationCard from \"./components/LocationCards.jsx\";\n\nconst UserProfile = (props) => {\n  const [profile, setProfile] = useState(null);\n  const history = useHistory();\n\n  const getInitialProfile = async (props) => {\n    let _profile = store.initialData ? store.initialData : null;\n    delete store.initialData;\n    if (!_profile) {\n      _profile = await UserProfile.fetchData(props.match);\n    }\n    setProfile(_profile);\n  };\n\n  const getProfile = async () => {\n    const _profile = await UserProfile.fetchData(props.match);\n    setProfile(_profile);\n  };\n\n  useConstructor(() => {\n    getInitialProfile(props);\n  });\n\n  useEffect(() => {\n    getProfile();\n  }, [props]);\n\n  const updateFollow = async (followId) => {\n    //console.log(followId);\n    const query = `\n      mutation updateUser($input:updateUserInput) {\n        updateUser(input: $input) {\n          user {\n            followers {\n              id\n            }\n          }\n        }\n      }`;\n\n    let profileFollowersArray = profile.followers.map(\n      (following) => following.id\n    );\n\n    //console.log(\"before adjusting\", profileFollowersArray);\n    let action;\n    // if the id that is being followed is not already in the array, add it\n    if (!profileFollowersArray.includes(followId)) {\n      profileFollowersArray.push(followId);\n      action = \"add\";\n    } else if (profileFollowersArray.includes(followId)) {\n      // followId is in array, so remove it from array\n      const index = profileFollowersArray.indexOf(followId);\n      if (index > -1) {\n        profileFollowersArray.splice(index, 1);\n      }\n      action = \"remove\";\n    }\n\n    //console.log(\"after adjusting\", profileFollowersArray);\n\n    const variables = {\n      input: {\n        where: {\n          id: profile.id,\n        },\n        data: {\n          followers: profileFollowersArray,\n        },\n      },\n    };\n\n    let prevProfile = { ...profile };\n    let _profile = { ...profile };\n\n    let newFollowArray = profileFollowersArray.map((following) => {\n      return { id: following };\n    });\n\n    _profile.followers = newFollowArray;\n    setProfile(_profile);\n\n    const data = await graphQLFetch(query, variables, true, true);\n\n    if (data) {\n      if (data.errors) {\n        console.log(\"an error happened\");\n        setProfile(prevProfile);\n      } else {\n        if (action === \"add\") {\n          await CreateNotification(followId, profile.id, \"follow\");\n        }\n      }\n    }\n  };\n\n  const deletePhoto = async (index) => {\n    const query = `mutation photoDelete($input:deletePhotoInput) {\n      deletePhoto(input: $input) {\n        photo {\n          id\n        }\n      }\n    }`;\n\n    const prevProfile = { ...profile };\n\n    const { photos } = profile;\n    const newList = [...photos];\n    newList.splice(index, 1);\n    const _profile = { ...profile };\n    _profile.photos = newList;\n    setProfile(_profile);\n\n    // get the id of the photo to be deleted\n    const { id } = photos[index];\n\n    const variables = {\n      input: {\n        where: {\n          id,\n        },\n      },\n    };\n\n    // execute the query\n    const data = await graphQLFetch(query, variables, true, true);\n\n    if (data) {\n      if (data.errors) {\n        console.log(\"an error happened\");\n        setProfile(prevProfile);\n      }\n    }\n  };\n\n  return (\n    <userContext.Consumer>\n      {(value) => {\n        //console.log(\"value\", value);\n        if (value.user) {\n          return (\n            <UserProfileComponent\n              curUser={value.user}\n              profile={profile}\n              updateFollow={updateFollow}\n              deletePhoto={deletePhoto}\n            />\n          );\n        } else {\n          return (\n            <UserProfileComponent\n              curUser={null}\n              profile={profile}\n              updateFollow={updateFollow}\n              deletePhoto={deletePhoto}\n            />\n          );\n        }\n      }}\n    </userContext.Consumer>\n  );\n};\n\nexport default UserProfile;\n\nUserProfile.fetchData = async (match, search, showError) => {\n  console.log(match);\n\n  const query = `query profile($slug: String!) {\n          users( where: { slug: $slug } ) {\n            username\n            profilePicture {\n              url\n            }\n            email\n            id\n            slug\n            location\n            followers{\n              id\n            }\n            followings {\n              id\n            }\n            favouriteLocations {\n              id\n              title\n              slug\n              location_categories {\n                id\n                label\n              }\n              photos {\n                likes\n                photo {\n                  url\n                  \n                }\n              }\n            }\n            photos {\n              likes\n              id\n              title\n              slug\n              location {\n                longitude\n                latitude\n                id\n                title\n                slug\n              }\n              photo {\n                id\n                name\n                url\n              }\n            }\n          }\n        }`;\n\n  let {\n    params: { slug },\n  } = match;\n  const result = await graphQLFetch(query, { slug }, true);\n  return result.users[0];\n};\n\nconst UserProfileComponent = (props) => {\n  const { curUser, profile, updateFollow, deletePhoto } = props;\n  if (profile === null) {\n    console.log(\"return null from render\");\n    return null;\n  }\n\n  const [isServer, setIsServer] = useState(true);\n\n  useEffect(() => {\n    setIsServer(false);\n  }, []);\n\n  //console.log(\"curUser\", props);\n\n  const followCount = profile.followers.length;\n  console.log(\n    \"userProfileComponent rendered again, followCount: \",\n    followCount,\n    profile\n  );\n  const filterResult =\n    curUser &&\n    profile.followers.filter((followers) => followers.id === curUser.id);\n  //console.log(filterResult);\n  const followsUser = curUser\n    ? profile.followers.filter((followers) => followers.id === curUser.id)\n        .length > 0\n    : 0;\n\n  let numberOfLikes = 0;\n  if (profile.photos.length > 0) {\n    for (let i = 0; i < profile.photos.length; i++) {\n      numberOfLikes = numberOfLikes + profile.photos[i].likes;\n    }\n  }\n  console.log(profile);\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"container\">\n        <div className=\"sm:flex sm:items-center\">\n          <div className=\"block sm:flex sm:items-center sm:w-full\">\n            <div className=\"mx-auto sm:mx-0 mb-2 sm:mr-4\">\n              <UserProfilePicture profile={profile} />\n            </div>\n            <div className=\"sm:w-full\">\n              <h1 className=\"font-bold text-xl leading-tight text-center sm:text-left\">\n                {profile.username}\n              </h1>\n              <div className=\"\">\n                <p className=\"flex items-center text-gray-400 text-sm text-center justify-center sm:justify-start\">\n                  <TiLocation />\n                  &nbsp;\n                  {profile.location}\n                </p>\n              </div>\n\n              <div className=\"hidden sm:block\">\n                <div className=\"flex justify-between sm:justify-start mt-2 w-full\">\n                  <p className=\"mr-2 text-center sm:mr-3\">\n                    <span className=\"block sm:inline-block font-bold text-sm sm:mr-1\">\n                      {followCount}\n                    </span>\n                    <span className=\"text-gray-500 text-sm\">\n                      {followCount === 1 ? \"volger\" : \"volgers\"}\n                    </span>\n                  </p>\n                  <p className=\"mr-2 text-center sm:mr-3\">\n                    <span className=\"block sm:inline-block font-bold text-sm sm:mr-1\">\n                      {profile.followings.length}\n                    </span>\n                    <span className=\"text-gray-500 text-sm\">volgend</span>\n                  </p>\n                  <p className=\"mr-2 text-center sm:mr-3\">\n                    <span className=\"block sm:inline-block font-bold text-sm sm:mr-1\">\n                      {numberOfLikes}\n                    </span>\n                    <span className=\"text-gray-500 text-sm\">likes</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {!isServer && curUser && curUser.id !== profile.id && (\n            <FollowButton\n              follow={followsUser}\n              updateFollow={updateFollow}\n              followId={curUser.id}\n            />\n          )}\n          {!isServer && curUser && curUser.id === profile.id && (\n            <Link\n              to={`/profiel/bewerken/${profile.slug}`}\n              className=\"ml-auto my-1 rounded bg-blue-500 hover:bg-blue-600 text-white p-1 sm:p-3 text-xl flex justify-center items-center editProfile\"\n            >\n              <MdEdit />\n            </Link>\n          )}\n\n          <div className=\"sm:hidden\">\n            <div className=\"flex justify-between mt-2\">\n              <p className=\"mr-2 text-center\">\n                <span className=\"block font-bold text-sm\">{followCount}</span>\n                <span className=\"text-gray-500 text-sm\">\n                  {followCount === 1 ? \"volger\" : \"volgers\"}\n                </span>\n              </p>\n              <p className=\"mr-2 text-center\">\n                <span className=\"block font-bold text-sm\">\n                  {profile.followings.length}\n                </span>\n                <span className=\"text-gray-500 text-sm\">volgend</span>\n              </p>\n              <p className=\"mr-2 text-center\">\n                <span className=\"block font-bold text-sm\">{numberOfLikes}</span>\n                <span className=\"text-gray-500 text-sm\">likes</span>\n              </p>\n            </div>\n          </div>\n        </div>\n        <hr className=\"my-3\" />\n        <h2 className=\"my-3\">Foto's</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n          {profile.photos.map((photo, index) => (\n            <PhotoView\n              key={photo.id}\n              index={index}\n              deletePhoto={\n                !isServer && curUser && curUser.id === profile.id\n                  ? deletePhoto\n                  : null\n              }\n              photo={photo}\n            />\n          ))}\n        </div>\n        <hr className=\"my-3\" />\n        <h2 id=\"fav\" className=\"my-3\">\n          Favoriete locaties\n        </h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n          {profile.favouriteLocations.map((location) => (\n            <LocationCard key={location.id} location={location} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}