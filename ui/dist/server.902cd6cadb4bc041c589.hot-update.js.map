{"version":3,"sources":["webpack:///./src/LocationDetailStrapi.jsx"],"names":["LocationDetailStrapi","React","Component","fetchData","match","search","showError","query","params","id","slug","console","log","result","graphQLFetch","constructor","locationBySlug","store","initialData","state","redirect","zoom","userLocationKnown","userMarker","userLocation","longitude","latitude","componentDidUpdate","prevProps","prevId","props","loadData","componentDidMount","L","require","Icon","iconUrl","userIcon","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","default","shadowAnchor","iconSize","Point","Default","prototype","_getIconUrl","mergeOptions","locationIcon","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","accuracy","setState","prevState","error","err","warn","code","message","fetch","then","res","json","location","navigator","geolocation","getCurrentPosition","data","render","photos","position","calculatedUserLocation","title","desc","map","photoItem","LocationPhotoItem","itemPhoto","item","photo","selectedLocation","url"],"mappings":"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","file":"server.902cd6cadb4bc041c589.hot-update.js","sourcesContent":["/* globals React */\n/* eslint \"react/jsx-no-undef\":\"off\" */\n\nimport React, { Component, Fragment } from \"react\";\nimport graphQLFetch from './graphQLFetch.js';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet-universal';\nimport { Link } from 'react-router-dom';\nimport store from \"./store.js\";\nimport { Redirect } from \"react-router-dom\";\nimport userIcon from \"./images/userMarker.svg\";\nimport locationIcon from \"./images/locationMarker.svg\";\nimport shadowIcon from \"./images/markerShadow.png\";\nimport { NavLink } from 'react-router-dom';\n\n\nexport default class LocationDetailStrapi extends React.Component {\n\n    static async fetchData(match, search, showError) {\n\n        // build the graphql query\n        const query = `query locationBySlug($slug: String!){\n            locationBySlug(slug: $slug) {\n                title\n                photos {\n                    id\n                    title\n                    slug\n                    photo {\n                        id\n                        name\n                        url\n                    }\n                }\n                desc\n                slug\n                id\n                longitude\n                latitude\n            }\n        }`;\n\n        let { params: { id: slug } } = match;\n        console.log(match);\n        const result = await graphQLFetch(query, { slug }, true);\n        return result;\n    }\n\n    constructor() {\n        super();\n        const locationBySlug = store.initialData ? store.initialData.locationBySlug : null;\n        delete store.initialData;\n        this.state = {\n            locationBySlug,\n            redirect: false,\n            zoom: 13,\n            userLocationKnown: false,\n            userMarker: null,\n            userLocation: {\n                longitude: null,\n                latitude: null\n            }\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { match: { params: { id: prevId } } } = prevProps;\n        const { match: { params: { id } } } = this.props;\n        if (prevId !== id) {\n            this.loadData();\n        }\n    }\n\n    componentDidMount() {\n        const { locationBySlug } = this.state;\n        if (locationBySlug === null) {\n            this.loadData();\n        }\n\n        // loading leaflet in componentDidMount because it doenst support SSR\n        const L = require(\"leaflet\");\n\n        const userMarker = new L.Icon({\n            iconUrl: userIcon,\n            iconRetinaUrl: userIcon,\n\n            iconAnchor: [16, 40],\n            popupAnchor: [0, -40],\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png').default,\n            shadowAnchor: [13, 40],\n            iconSize: new L.Point(32, 40),\n        });\n\n        delete L.Icon.Default.prototype._getIconUrl;\n\n        L.Icon.Default.mergeOptions({\n            iconUrl: locationIcon,\n            iconRetinaUrl: locationIcon,\n            iconAnchor: [16, 40],\n            popupAnchor: [0, -40],\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png').default,\n            shadowAnchor: [13, 40],\n            iconSize: new L.Point(32, 40),\n        });\n\n        // get users position\n        var options = {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n        };\n\n        const success = (pos) => {\n            var crd = pos.coords;\n\n            console.log('Your current position is:');\n            console.log(`Latitude : ${crd.latitude}`);\n            console.log(`Longitude: ${crd.longitude}`);\n            console.log(`More or less ${crd.accuracy} meters.`);\n\n            this.setState(\n                (prevState) => ({\n                    ...prevState, userMarker, userLocationKnown: true, userLocation: { longitude: crd.longitude, latitude: crd.latitude }\n                })\n            )\n        }\n\n        const error = (err) => {\n            console.warn(`ERROR(${err.code}): ${err.message}`);\n\n            fetch('https://ipapi.co/json')\n                .then(res => res.json())\n                .then(location => {\n                    this.setState(\n                        (prevState) => ({\n                            ...prevState, userMarker, userLocationKnown: true, userLocation: { longitude: location.longitude, latitude: location.latitude }\n                        })\n                    )\n                });\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error, options);\n\n    }\n\n    async loadData() {\n        // get the search query string form url\n        const { match } = this.props;\n        // provide the query with the variables \n        const data = await LocationDetailStrapi.fetchData(match);\n        if (data.locationBySlug != null) {\n            this.setState({ locationBySlug: data.locationBySlug });\n        } else {\n            console.log('return not found');\n            this.setState({ redirect: true });\n            console.log(this.state);\n        }\n    }\n\n    render() {\n        const { locationBySlug, redirect } = this.state;\n        if (redirect) {\n            console.log('redirect', redirect);\n            return <Redirect to=\"/niet-gevonden\" />;\n        }\n        if (locationBySlug === null) return null;\n\n        const { userLocation, userLocationKnown, userMarker, } = this.state;\n        const { photos } = locationBySlug;\n\n        const position = [locationBySlug.longitude, locationBySlug.latitude];\n        const calculatedUserLocation = userLocation.latitude ? [userLocation.latitude, userLocation.longitude] : null;\n\n        return (\n            <div id=\"page\">\n                <div id=\"photoInfo\" className=\"p-6\">\n                    <h1 className=\"text-2xl font-bold mb-1 text-gray-800 block\">{locationBySlug.title}</h1>\n                    <p className=\"text-gray-600\">{locationBySlug.desc}</p>\n                    <Map className=\"map\" id=\"photoLocation\" center={position} zoom={this.state.zoom}>\n                        <TileLayer\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker position={position}>\n                            <Popup>\n                                Foto locatie\n                            </Popup>\n                        </Marker>\n                        {userLocationKnown && <Marker position={calculatedUserLocation} icon={userMarker}>\n                            <Popup>\n                                Jouw locatie\n                            </Popup>\n                        </Marker>}\n                    </Map>\n                    <h2 className=\"text-xl font-bold mb-1 text-gray-800 block\">Foto's gemaakt op fotolocatie {locationBySlug.title}</h2>\n                    <div className=\"-mx-2\">\n                        {photos.map(photoItem => {\n                            return <LocationPhotoItem item={photoItem} key={photoItem.id} />\n                        })\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction LocationPhotoItem(props) {\n    const itemPhoto = props.item.photo[0];\n    const selectedLocation = `/foto/${props.item.slug}`;\n    return (\n        <React.Fragment>\n            <div className=\"w-full inline-block md:w-1/2 lg:w-1/3 p-2\">\n                <div className=\"photoCard rounded relative shadow-xs\">\n                    <div className=\"relative rounded overflow-hidden\">\n                        <NavLink\n                            to={selectedLocation}\n                            className=\"absolute w-full h-full z-10\"\n                            title=\"Bekijk foto nu\"\n                        ></NavLink>\n                        <img\n                            src={itemPhoto.url}\n                            className=\"object-cover  w-full h-48  block\"\n                            alt=\"Foto\"\n                        />\n\n                        <div className=\"photoContent p-4 absolute bottom-0 left-0\">\n                            <div className=\"photoInfo\">\n                                <h3 className=\"text-white\">{props.item.title}</h3>\n                            </div>\n                            <div className=\"clear\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n\n    );;\n}"],"sourceRoot":""}