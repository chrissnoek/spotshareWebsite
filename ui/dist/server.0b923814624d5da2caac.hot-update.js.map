{"version":3,"sources":["webpack:///./src/Login.jsx"],"names":["LoginForm","Form","data","email","password","errors","Joi","string","tlds","allow","required","messages","query","state","input","Object","defineProperty","getOwnPropertyDescriptor","console","log","result","graphQLFetch","error","login","jwt","user","id","username","localStorage","setItem","loginUser","render","handleSubmit","renderInput","renderButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAN,SAAwBC,iDAAxB,CAA6B;AAAA;AAAA;;AAAA,mCACjB;AACJC,UAAI,EAAE;AACFC,aAAK,EAAE,EADL;AAEFC,gBAAQ,EAAE;AAFR,OADF;AAKJC,YAAM,EAAE;AALJ,KADiB;;AAAA,oCAShB;AACLF,WAAK,EAAEG,gDAAG,CAACC,MAAJ,GAAaJ,KAAb,CAAmB;AAAEK,YAAI,EAAE;AAAEC,eAAK,EAAE;AAAT;AAAR,OAAnB,EACFC,QADE,GACSC,QADT,CACkB;AACjB,wBAAiB,kCADA;AAEjB,wBAAiB,kCAFA;AAGjB,wBAAiB;AAHA,OADlB,CADF;AAOLP,cAAQ,EAAEE,gDAAG,CAACC,MAAJ,GACLG,QADK,GACMC,QADN,CACe;AACjB,wBAAiB,uCADA;AAEjB,wBAAiB;AAFA,OADf;AAPL,KATgB;;AAAA,uCAuBb,YAAY;AACpB,YAAMC,KAAK,GAAI;;;;;;;;;aAAf;AAWA,YAAM;AAAEV;AAAF,UAAW,KAAKW,KAAtB;AAEA,UAAIC,KAAK,GAAG,EAAE,GAAGZ;AAAL,OAAZ;AAEAa,YAAM,CAACC,cAAP,CAAsBF,KAAtB,EAA6B,YAA7B,EAA2CC,MAAM,CAACE,wBAAP,CAAgCH,KAAhC,EAAuC,OAAvC,CAA3C;AACA,aAAOA,KAAK,CAAC,OAAD,CAAZ;AAEAI,aAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,YAAMM,MAAM,GAAG,MAAMC,gEAAY,CAACT,KAAD,EAAQ;AAAEE;AAAF,OAAR,EAAmB,IAAnB,EAAyB,IAAzB,CAAjC;;AACA,UAAIM,MAAJ,EAAY;AACR,YAAIA,MAAM,CAACf,MAAX,EAAmB;AACf,gBAAMiB,KAAK,GAAGF,MAAM,CAACf,MAAP,CAAc,CAAd,CAAd,CADe,CAEf;;AACAa,iBAAO,CAACC,GAAR,CAAYG,KAAZ;AAEH,SALD,MAKO;AACH;AACA,gBAAM;AAAEC;AAAF,cAAYH,MAAlB;AACA,gBAAM;AAAEI,eAAF;AAAOC,gBAAI,EAAE;AAAEtB,mBAAF;AAASuB,gBAAT;AAAaC;AAAb;AAAb,cAAyCJ,KAA/C;AACAL,iBAAO,CAACC,GAAR,CAAYK,GAAZ,EAAiBE,EAAjB,EAAqBvB,KAArB,EAA4BwB,QAA5B;AACAC,sBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAA9B;AACH;AACJ;AACJ,KA3DwB;;AAAA,sCA6Dd,MAAM;AACb;AACA;AACAN,aAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKW,SAAL;AACH,KAlEwB;AAAA;;AAoEzBC,QAAM,GAAG;AACL,wBACI,qFACI;AAAK,eAAS,EAAC;AAAf,oBACI;AAAM,cAAQ,EAAE,KAAKC,YAArB;AAAmC,eAAS,EAAC;AAA7C,oBACI;AAAI,eAAS,EAAC;AAAd,gCADJ,EAGK,KAAKC,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,EAAmC,YAAnC,CAHL,EAIK,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,YAA7B,EAA2C,sBAA3C,EAAmE,UAAnE,CAJL,eAOI;AAAK,eAAS,EAAC;AAAf,OACK,KAAKC,YAAL,CAAkB,QAAlB,CADL,eAEI;AAAG,eAAS,EAAC,iFAAb;AAA+F,UAAI,EAAC;AAApG,8BAFJ,qBAKI,2DAAC,wDAAD;AAAS,eAAS,EAAC,iFAAnB;AAAqG,QAAE,EAAC;AAAxG,mBALJ,CAPJ,CADJ,CADJ,CADJ;AAqBH;;AA1FwB;;AA6FdlC,wEAAf,E","file":"server.0b923814624d5da2caac.hot-update.js","sourcesContent":["import React from 'react';\nimport Joi from '@hapi/joi';\nimport Form from './Form.jsx';\nimport { NavLink } from 'react-router-dom';\nimport graphQLFetch from './graphQLFetch.js';\n\nclass LoginForm extends Form {\n    state = {\n        data: {\n            email: '',\n            password: ''\n        },\n        errors: {}\n    }\n\n    schema = {\n        email: Joi.string().email({ tlds: { allow: false } })\n            .required().messages({\n                \"string.empty\": `Vul je je email nog even in? ðŸ˜‰.`,\n                \"any.required\": `Vul je je email nog even in? ðŸ˜‰.`,\n                \"string.email\": `Vul je een geldig adres in? ðŸ˜‰.`\n            }),\n        password: Joi.string()\n            .required().messages({\n                \"string.empty\": `Vul je je wachtwoord nog even in? ðŸ˜‰.`,\n                \"any.required\": `Vul je je wachtwoord nog even in? ðŸ˜‰.`\n            })\n    };\n\n    loginUser = async () => {\n        const query = `mutation login($input: UsersPermissionsLoginInput!) {\n            login(input: $input) {\n              jwt\n              user {\n                id\n                email\n                username\n              }\n            }\n          } `;\n\n        const { data } = this.state;\n\n        let input = { ...data };\n\n        Object.defineProperty(input, \"identifier\", Object.getOwnPropertyDescriptor(input, \"email\"));\n        delete input[\"email\"];\n\n        console.log(input);\n\n        const result = await graphQLFetch(query, { input }, true, true);\n        if (result) {\n            if (result.errors) {\n                const error = result.errors[0];\n                // Error, email or password wrong\n                console.log(error);\n\n            } else {\n                // user logged in!\n                const { login } = result;\n                const { jwt, user: { email, id, username } } = login;\n                console.log(jwt, id, email, username);\n                localStorage.setItem('token', jwt);\n            }\n        }\n    }\n\n    doSubmit = () => {\n        // call server\n        // redirect user to homepage\n        console.log('submitted');\n        this.loginUser();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"m-6\">\n                    <form onSubmit={this.handleSubmit} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col border\">\n                        <h1 className=\"font-bold text-xl text-green-500\">Inloggen bij Spotshare</h1>\n\n                        {this.renderInput('email', 'Email', 'Emailadres')}\n                        {this.renderInput('password', 'Wachtwoord', 'Vul je wachtwoord in', 'password')}\n\n\n                        <div className=\"flex items-center justify-between\">\n                            {this.renderButton('Log in')}\n                            <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-600\" href=\"#\">\n                                Wachtwoord vergeten?\n                            </a> |\n                            <NavLink className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-600\" to=\"/aanmelden\">Aanmelden</NavLink>\n                        </div>\n                    </form>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default LoginForm;"],"sourceRoot":""}