{"version":3,"sources":["webpack:///./src/components/CategorySearch/LocationsPerCategorie.jsx","webpack:///./src/components/Results/LocationList.jsx"],"names":["LocationsPerCategorie","props","locations","setLocations","useState","filteredLocations","setFilteredLocations","selectedLocation","setSelectedLocation","showMap","setShowMap","history","useHistory","location","useLocation","useEffect","getLocations","_activeFilter","getActiveFilter","_filteredLocations","filter","include","location_categories","categorie","id","length","_locations","store","initialData","console","log","fetchData","match","search","photos","params","URLSearchParams","get","useConstructor","setActiveFilter","selectLocation","locationId","map","showError","value","query","data","graphQLFetch","locationCategories","LocationList","active","cardClass","goToLocation","slug","sessionStorage","getItem","JSON","parse","indexOf","push","setItem","stringify","backgroundColor","sort","a","b","likes","photo","url","replace","title","category"],"mappings":"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","file":"server.8cb73cdca135dda35951.hot-update.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { findNearbyLocations } from \"../FindNearbyLocations.jsx\";\n/* to support IE */\nimport store from \"../../store.js\";\nimport useConstructor from \"../ConstructorHook.jsx\";\nimport ResultMap from \"../Results/ResultMap.jsx\";\nimport CategorieFilter from \"../Results/CategorieFilter.jsx\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport graphQLFetch from \"../../graphQLFetch.js\";\nimport LocationList from \"../Results/LocationList.jsx\";\n\nconst LocationsPerCategorie = (props) => {\n  const [locations, setLocations] = useState();\n  const [filteredLocations, setFilteredLocations] = useState({});\n  const [selectedLocation, setSelectedLocation] = useState();\n  const [showMap, setShowMap] = useState(false);\n\n  let history = useHistory();\n  let location = useLocation();\n\n  useEffect(() => {\n    !locations && getLocations();\n\n    const _activeFilter = getActiveFilter();\n\n    if (locations) {\n      const _filteredLocations = locations.filter((location) => {\n        const include = location.location_categories.filter((categorie) => {\n          if (categorie.id === _activeFilter) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        //console.log(location.id, include);\n        if (include.length > 0) return true;\n      });\n      setFilteredLocations(_filteredLocations);\n    }\n    //console.log(_filteredLocations);\n  }, [location]);\n\n  const getLocations = async () => {\n    let _locations = store.initialData ? store.initialData : null;\n    console.log(store.initialData, _locations);\n    delete store.initialData;\n    if (!_locations) {\n      console.log(\"getting locations\");\n      _locations = await LocationsPerCategorie.fetchData(\n        props.match,\n        location.search\n      );\n    }\n    setLocations(_locations.filter((location) => location.photos.length > 0));\n    console.log(_locations);\n  };\n\n  const getActiveFilter = () => {\n    const params = new URLSearchParams(location.search);\n\n    const _activeFilter = params.get(\"categorie\")\n      ? params.get(\"categorie\")\n      : \"\";\n\n    if (_activeFilter) {\n      return _activeFilter;\n    } else {\n      return false;\n    }\n  };\n\n  useConstructor(() => {\n    const _activeFilter = getActiveFilter();\n    if (_activeFilter) {\n      setActiveFilter(_activeFilter);\n    }\n    getLocations();\n    setShowMap(true);\n  });\n\n  const selectLocation = (locationId) => {\n    setSelectedLocation(locationId);\n  };\n\n  return (\n    <div className=\"relative h-screen\">\n      <div className=\"flex h-full\">\n        <div className=\"w-full p-4 h-screen overflow-scroll\">\n          <h1>Resultaten</h1>\n          {/* <div className=\"mb-2 flex\">\n            <span className=\"mr-2\">Filter op categorie:</span>\n            {locations &&\n              (filteredLocations.length > 0 ? (\n                <CategorieFilter\n                  active={activeFilter}\n                  onFilterChange={onFilterChange}\n                  categories={filteredLocations.map((location) => {\n                    return location.location_categories;\n                  })}\n                />\n              ) : (\n                <CategorieFilter\n                  active={activeFilter}\n                  onFilterChange={onFilterChange}\n                  categories={locations.map((location) => {\n                    return location.location_categories;\n                  })}\n                />\n              ))}\n          </div> */}\n          {locations &&\n            (filteredLocations.length > 0\n              ? filteredLocations.map((location) => (\n                  <div key={location.id} className=\"w-full\">\n                    <LocationList\n                      size=\"large\"\n                      location={location}\n                      key={location.id}\n                      active={selectedLocation === location.id ? true : false}\n                      selectLocation={selectLocation}\n                    />\n                  </div>\n                ))\n              : locations.map((location) => (\n                  <div key={location.id} className=\"w-full\">\n                    <LocationList\n                      size=\"large\"\n                      location={location}\n                      key={location.id}\n                      active={selectedLocation === location.id ? true : false}\n                      selectLocation={selectLocation}\n                    />\n                  </div>\n                )))}\n        </div>\n\n        <div className=\"mb-10 w-full h-full\">\n          {showMap &&\n            locations &&\n            (filteredLocations.length > 0 ? (\n              <ResultMap\n                locations={filteredLocations}\n                selectLocation={selectLocation}\n                active={selectedLocation}\n              />\n            ) : (\n              <ResultMap\n                locations={locations}\n                selectLocation={selectLocation}\n                active={selectedLocation}\n              />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationsPerCategorie;\n\nLocationsPerCategorie.fetchData = async (match, search, showError) => {\n  // test URL; http://localhost:8000/fotolocaties/resultaten?lng=52.379189&lat=4.899431\n  // use URLSearchParams for IE Compatibility\n\n  console.log(match);\n\n  let {\n    params: { value },\n  } = match;\n\n  console.log(value);\n\n  const query = `query locationCategorie($value:String!){\n    locationCategories(where:{value: $value}) {\n      label\n    value\n    locations {\n      id\n      title\n      longitude\n      latitude\n      slug\n      location_categories {\n        label\n        value\n        locations {\n          title\n        }\n      }\n      photos {\n            id\n            likes\n            title\n            slug\n            photo {\n                url \n            }\n        }\n    }\n  }\n  }`;\n\n  const data = await graphQLFetch(query, { value }, true);\n  if (data) {\n    console.log(data.locationCategories[0].locations);\n  }\n\n  return data.locationCategories[0].locations;\n\n  // const params = new URLSearchParams(search);\n\n  // console.log(\"fetching data\");\n\n  // const vars = {};\n  // if (params.get(\"lat\")) vars.lat = params.get(\"lat\");\n  // if (params.get(\"lng\")) vars.lng = params.get(\"lng\");\n  // //vars.cat = params.get(\"categorie\") ? params.get(\"categorie\") : \"\";\n\n  // console.log(vars);\n\n  // const _locations = await findNearbyLocations(vars.lat, vars.lng);\n\n  // console.log(_locations);\n\n  // return _locations;\n};\n","import React from \"react\";\nimport Img from \"react-cool-img\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LocationList = ({ location, active, selectLocation }) => {\n  let history = useHistory();\n  let cardClass = active\n    ? \"w-full mb-1 border-2 border-green-500\"\n    : \"w-full mb-1 border-2 border-white\";\n\n  const goToLocation = (slug, id) => {\n    let data = [];\n    if (sessionStorage.getItem(\"visitedLocations\")) {\n      data = JSON.parse(sessionStorage.getItem(\"visitedLocations\"));\n    }\n    if (data.indexOf(id) === -1) {\n      data.push(id);\n    }\n    sessionStorage.setItem(\"visitedLocations\", JSON.stringify(data));\n\n    history.push(`/fotolocatie/${slug}`);\n  };\n\n  return (\n    <div>\n      <div\n        onMouseOver={() => {\n          selectLocation(location.id);\n        }}\n        onMouseOut={() => {\n          selectLocation(\"\");\n        }}\n        className={`relative shadow hover:shadow-lg transition ease-in-out rounded ${cardClass}`}\n      >\n        <div\n          className=\"flex items-center p-1\"\n          onClick={() => {\n            goToLocation(location.slug, location.id);\n          }}\n        >\n          <Img\n            className={`rounded block max-w-none w-20 h-16 object-cover`}\n            style={{\n              backgroundColor: \"grey\",\n            }}\n            src={location.photos\n              .sort((a, b) => b.likes - a.likes)[0]\n              .photo[0].url.replace(/-original|-watermark/gi, \"-small\")}\n            alt={`Bekijk locatie ${location.title}`}\n          />\n\n          <div className=\"px-5 py-2\">\n            <h3 className=\"text-black text-lg\">{location.title}</h3>\n            {location.location_categories.map((category) => (\n              <LocationHashtag key={category.id} category={category} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationList;\n"],"sourceRoot":""}