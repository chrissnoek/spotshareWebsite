scalar GraphQLDate

type Photo {
  _id: ID!
  id: Int!
  created: GraphQLDate!
  title: String!
  description: String!
  date: GraphQLDate!
  # placeID: Int!
  # eventID: Int
  images: Images!
  brand:  String
  shutterspeed:  String
  ISO:  String
  aperture:  String
  camera: String
  # likes: Int!
  focalLength: String
}

type Images {
  imageThumb: String!
  imageOriginal: String!
  imageWatermark: String!
}
input ImageInputs {
  imageThumb: String!
  imageOriginal: String!
  imageWatermark: String!
}
# image: File!
# memberId: Int!
# image: File!
# maxPlaces: Int
# attendees: Int
# price: Int

input PhotoInputs {
  title: String!
  date: GraphQLDate!
  description: String!
  images: ImageInputs!
  # placeID: Int!
  # eventID: Int
  brand:  String
  shutterspeed:  String
  ISO:  String
  aperture:  String
  camera: String
  focalLength: String
}
# memberId: Int!

# Top level declarations
type Query {
  about: String!
  photoList(category: String): [Photo!]!
  photo(id: Int!): Photo!
}

type Mutation {
  setAboutMessage(message: String!): String
  photoAdd(photo: PhotoInputs!): Photo!
}
