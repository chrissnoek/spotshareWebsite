{"version":3,"sources":["webpack:///./src/components/Dashboard/MostRecent.jsx"],"names":["MostRecent","recentPhotos","setRecentPhotos","useState","getMostRecent","_recentPhotos","store","initialData","fetchData","useConstructor","photos","map","photo","id","match","search","showError","query","vars","result","graphQLFetch"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,sDAAQ,EAAhD;;AAEA,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAIC,aAAa,GAAGC,iDAAK,CAACC,WAAN,GAAoBD,iDAAK,CAACC,WAA1B,GAAwC,IAA5D;;AACA,WAAOD,iDAAK,CAACC,WAAb;;AACA,QAAI,CAACF,aAAL,EAAoB;AAClBA,mBAAa,GAAG,MAAML,UAAU,CAACQ,SAAX,EAAtB;AACD;;AACDN,mBAAe,CAACG,aAAD,CAAf;AACD,GAPD;;AASAI,sEAAc,CAAC,MAAM;AACnBL,iBAAa;AACd,GAFa,CAAd;AAIA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE,sFADF,eAEE;AAAK,aAAS,EAAC;AAAf,KACGH,YAAY,IACXA,YAAY,CAACS,MAAb,CAAoBC,GAApB,CAAyBC,KAAD,IAAW;AACjC,wBAAO,2DAAC,uDAAD;AAAY,SAAG,EAAEA,KAAK,CAACC,EAAvB;AAA2B,WAAK,EAAED;AAAlC,MAAP;AACD,GAFD,CAFJ,CAFF,CADF;AAWD,CA3BD;;AA6BeZ,yEAAf;;AAEAA,UAAU,CAACQ,SAAX,GAAuB,OAAOM,KAAP,EAAcC,MAAd,EAAsBC,SAAtB,KAAoC;AACzD;AACA,QAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAf;AAoDA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,MAAM,GAAG,MAAMC,gEAAY,CAACH,KAAD,EAAQC,IAAR,EAAc,IAAd,CAAjC;AACA,SAAOC,MAAP;AACD,CAzDD,C","file":"server.8b0484680331795885aa.hot-update.js","sourcesContent":["import React, { useState } from \"react\";\nimport useConstructor from \"../ConstructorHook.jsx\";\nimport store from \"../../store.js\";\nimport graphQLFetch from \"../../graphQLFetch.js\";\nimport SocialCard from \"./SocialCard.jsx\";\n\nconst MostRecent = () => {\n  const [recentPhotos, setRecentPhotos] = useState();\n\n  const getMostRecent = async () => {\n    let _recentPhotos = store.initialData ? store.initialData : null;\n    delete store.initialData;\n    if (!_recentPhotos) {\n      _recentPhotos = await MostRecent.fetchData();\n    }\n    setRecentPhotos(_recentPhotos);\n  };\n\n  useConstructor(() => {\n    getMostRecent();\n  });\n\n  return (\n    <div className=\"container px-6 py-6\">\n      <h2>Meest Recent</h2>\n      <div className=\"\">\n        {recentPhotos &&\n          recentPhotos.photos.map((photo) => {\n            return <SocialCard key={photo.id} photo={photo} />;\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default MostRecent;\n\nMostRecent.fetchData = async (match, search, showError) => {\n  // build the graphql query\n  const query = `query recentPhotos{\n    photos(limit: 6, sort:\"createdAt:desc\") {\ncreatedAt\n      title\n      desc\n      photo {\n          url\n      }\n\n      comments {\n        body\n        user {\n          profilePicture {\n            url\n          }\n          slug\n          username \n        }\n      }\n      slug\n      date\n      brand\n\n      shutterspeed\n      iso\n      aperture\n      camera\n      likes\n      focalLength\nusersLike {\nid\n}\n      location {\n          longitude\n          latitude\n          id\n          title\n          slug\n      }\n      user {\n        id\n        slug\n        username\n        firstname\n        lastname\n        profilePicture {\n            url\n          }\n      }\n    }\n  }`;\n\n  const vars = {};\n  const result = await graphQLFetch(query, vars, true);\n  return result;\n};\n"],"sourceRoot":""}