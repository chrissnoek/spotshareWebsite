{"version":3,"sources":["webpack:///./src/PhotoDetail.jsx"],"names":["PhotoDetail","React","Component","fetchData","match","search","showError","query","params","id","parseInt","result","graphQLFetch","constructor","console","log","store","initialData","photo","state","lat","lng","zoom","componentDidUpdate","prevProps","prevId","props","loadData","componentDidMount","data","setState","render","images","imageWatermark","position","title","description"],"mappings":"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","file":"server.b224f2ef9163de3f6f0b.hot-update.js","sourcesContent":["/* globals React */\n/* eslint \"react/jsx-no-undef\":\"off\" */\n\nimport React, { Component } from \"react\";\nimport graphQLFetch from './graphQLFetch.js';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet-universal';\nimport { Link } from 'react-router-dom';\nimport store from \"./store.js\";\n\n\nexport default class PhotoDetail extends React.Component {\n\n    static async fetchData(match, search, showError) {\n\n        // build the graphql query\n        const query = `query photo($id: Int!) {\n        photo(id: $id) {\n          id\n          title\n          date\n          created\n          description\n          images {\n            imageThumb\n            imageOriginal\n            imageWatermark\n          }\n        }\n      }`;\n\n        let { params: { id } } = match;\n        id = parseInt(id);\n        const result = await graphQLFetch(query, { id }, showError);\n        return result;\n    }\n\n    constructor() {\n        super();\n        console.log(store.initialData)\n        const photo = store.initialData ? store.initialData.photo : null;\n        delete store.initialData;\n        this.state = {\n            photo,\n            lat: 51.505,\n            lng: -0.09,\n            zoom: 13,\n        };\n        console.log(this.state);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { match: { params: { id: prevId } } } = prevProps;\n        const { match: { params: { id } } } = this.props;\n        if (prevId !== id) {\n            this.loadData();\n        }\n    }\n\n    componentDidMount() {\n        const { photo } = this.state;\n        if (photo === null) {\n            this.loadData();\n        }\n    }\n\n    async loadData() {\n        // get the search query string form url\n        const { match: { params: { id } } } = this.props;\n        // provide the query with the variables \n        const data = await PhotoDetail.fetchData(query, { id });\n        if (data) {\n            this.setState({ photo: data.photo });\n        }\n    }\n\n    render() {\n\n        const { photo: { images: { imageWatermark } } } = this.state;\n        const { photo } = this.state;\n        const position = [this.state.lat, this.state.lng];\n\n        return (\n            <div id=\"page\" className=\"p-6\">\n                <h1>{photo.title}</h1>\n                <p>{photo.description}</p>\n                <Link to={`/edit/${photo.id}`}>Bewerken</Link>\n                <img\n                    src={imageWatermark}\n                    className=\" w-full   block\"\n                    alt=\"Foto\"\n                />\n                <Map className=\"map\" center={position} zoom={this.state.zoom}>\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <Marker position={position}>\n                        <Popup>\n                            A pretty CSS3 popup. <br /> Easily customizable.\n                        </Popup>\n                    </Marker>\n                </Map>\n            </div>\n        );\n    }\n}"],"sourceRoot":""}