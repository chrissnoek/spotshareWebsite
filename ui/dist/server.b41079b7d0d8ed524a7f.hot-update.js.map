{"version":3,"sources":["webpack:///./src/components/Dashboard/Dashboard.jsx"],"names":["Dashboard","props","categories","setCategories","useState","getCategories","_categories","store","initialData","fetchData","useConstructor","redirect","slug","history","push","value","console","log","user","username","match","search","showError","query","vars","locationCategories","result","graphQLFetch"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,sDAAQ,EAA5C;;AAEA,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAIC,WAAW,GAAGC,iDAAK,CAACC,WAAN,GAAoBD,iDAAK,CAACC,WAA1B,GAAwC,IAA1D;;AACA,WAAOD,iDAAK,CAACC,WAAb;;AACA,QAAI,CAACF,WAAL,EAAkB;AAChBA,iBAAW,GAAG,MAAMN,SAAS,CAACS,SAAV,EAApB;AACD;;AACDN,iBAAa,CAACG,WAAD,CAAb;AACD,GAPD;;AASAI,sEAAc,CAAC,MAAM;AACnBL,iBAAa;AACd,GAFa,CAAd;;AAIA,QAAMM,QAAQ,GAAIC,IAAD,IAAU;AACzBX,SAAK,CAACY,OAAN,CAAcC,IAAd,CAAmBF,IAAnB;AACD,GAFD;;AAIA,sBACE,2DAAC,oEAAD,CAAa,QAAb,QACIG,KAAD,IAAW;AACVC,WAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,CAACA,KAAK,CAACG,IAAP,gBACL,2DAAC,yDAAD;AAAU,QAAE,EAAC;AAAb,MADK,gBAGL,2DAAC,4CAAD,CAAO,QAAP,qBACE;AAAK,eAAS,EAAC;AAAf,oBACE;AAAK,eAAS,EAAC;AAAf,oBACE;AAAK,eAAS,EAAC;AAAf,oBACE;AAAK,eAAS,EAAC;AAAf,oBACE,2DAAC,gEAAD;AAAoB,aAAO,EAAEH,KAAK,CAACG,IAAnC;AAAyC,UAAI,EAAE;AAA/C,MADF,CADF,eAIE;AAAI,eAAS,EAAC;AAAd,OACGH,KAAK,CAACG,IAAN,CAAWC,QADd,CAJF,CADF,eASE;AAAI,eAAS,EAAC;AAAd,oBACE;AAAI,eAAS,EAAC;AAAd,oBACE,2DAAC,sDAAD;AAAQ,eAAS,EAAC;AAAlB,MADF,cADF,eAKE,oFACE,2DAAC,qDAAD;AACE,eAAS,EAAC,8DADZ;AAEE,QAAE,EAAC;AAFL,6BADF,CALF,eAaE,oFACE,2DAAC,qDAAD;AACE,eAAS,EAAC,8DADZ;AAEE,QAAE,EAAC;AAFL,uBADF,CAbF,eAqBE,oFACE,2DAAC,qDAAD;AACE,eAAS,EAAC,8DADZ;AAEE,QAAE,EAAC;AAFL,mBADF,CArBF,eA6BE,oFACE,2DAAC,qDAAD;AACE,eAAS,EAAC,iGADZ;AAEE,QAAE,EAAC;AAFL,mBADF,CA7BF,CATF,CADF,eAkDE;AAAK,eAAS,EAAC;AAAf,oBACE,2DAAC,oDAAD;AAAS,cAAQ,EAAER;AAAnB,MADF,eAEE,2DAAC,uDAAD,OAFF,CAlDF,eAuDE;AAAK,eAAS,EAAC;AAAf,oBACE,2DAAC,4DAAD,OADF,eAEE,2DAAC,0DAAD;AAAe,gBAAU,EAAET;AAA3B,MAFF,CAvDF,CADF,CAHF;AAkED,GArEH,CADF;AAyED,CA7FD;;AA+FeF,wEAAf;;AAEAA,SAAS,CAACS,SAAV,GAAsB,OAAOW,KAAP,EAAcC,MAAd,EAAsBC,SAAtB,KAAoC;AACxD;AACA,QAAMC,KAAK,GAAI;;;;;KAAf;AAOA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAM;AAAEC,sBAAkB,EAAEC;AAAtB,MAAiC,MAAMC,gEAAY,CAACJ,KAAD,EAAQC,IAAR,EAAc,IAAd,CAAzD;AACA,SAAOE,MAAP;AACD,CAZD,C","file":"server.b41079b7d0d8ed524a7f.hot-update.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Heading from \"./Heading.jsx\";\nimport LocationsNearby from \"./LocationsNearby.jsx\";\nimport CategorieList from \"./CategorieList.jsx\";\nimport graphQLFetch from \"../../graphQLFetch.js\";\nimport store from \"../../store.js\";\nimport { userContext } from \"../../services/userContext.js\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport useConstructor from \"../ConstructorHook.jsx\";\nimport MostRecent from \"./MostRecent.jsx\";\nimport UserProfilePicture from \"../UserProfilePicture.jsx\";\nimport { FaHome } from \"react-icons/fa\";\n\nconst Dashboard = (props) => {\n  const [categories, setCategories] = useState();\n\n  const getCategories = async () => {\n    let _categories = store.initialData ? store.initialData : null;\n    delete store.initialData;\n    if (!_categories) {\n      _categories = await Dashboard.fetchData();\n    }\n    setCategories(_categories);\n  };\n\n  useConstructor(() => {\n    getCategories();\n  });\n\n  const redirect = (slug) => {\n    props.history.push(slug);\n  };\n\n  return (\n    <userContext.Consumer>\n      {(value) => {\n        console.log(value);\n        return !value.user ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <React.Fragment>\n            <div className=\"block md:flex\">\n              <div className=\"w-full md:w-1/4 p-8\">\n                <div className=\"flex items-center\">\n                  <div className=\"mr-4\">\n                    <UserProfilePicture profile={value.user} size={10} />\n                  </div>\n                  <h1 className=\"font-bold text-xl leading-tight text-center sm:text-left\">\n                    {value.user.username}\n                  </h1>\n                </div>\n                <ul className=\"mt-6\">\n                  <li className=\"block py-2 text-blue-500 font-bold\">\n                    <FaHome className=\"mr-2\" />\n                    Dashboard\n                  </li>\n                  <li>\n                    <Link\n                      className=\"block py-2 text-gray-900 hover:text-blue-500 hover:font-bold\"\n                      to=\"/\"\n                    >\n                      Opgeslagen locaties\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      className=\"block py-2 text-gray-900 hover:text-blue-500 hover:font-bold\"\n                      to=\"\"\n                    >\n                      Foto uploaden\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      className=\"block py-2 text-gray-900 hover:text-blue-500 hover:font-bold\"\n                      to=\"\"\n                    >\n                      Berichten\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      className=\"block py-2 text-gray-900 hover:text-blue-500 hover:font-bold border-t border-gray-200 pt-6 mt-6\"\n                      to=\"\"\n                    >\n                      Uitloggen\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"w-full md:w-1/2\">\n                <Heading redirect={redirect} />\n                <MostRecent />\n              </div>\n\n              <div className=\"w-full md:w-1/4\">\n                <LocationsNearby />\n                <CategorieList categories={categories} />\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      }}\n    </userContext.Consumer>\n  );\n};\n\nexport default Dashboard;\n\nDashboard.fetchData = async (match, search, showError) => {\n  // build the graphql query\n  const query = `query {\n\t\tlocationCategories{\n\t\t  label\n\t\t  value\n\t\t}\n\t  }`;\n\n  const vars = {};\n  const { locationCategories: result } = await graphQLFetch(query, vars, true);\n  return result;\n};\n"],"sourceRoot":""}