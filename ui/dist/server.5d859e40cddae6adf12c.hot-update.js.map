{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","component","fetchData","match","index","url","indexOf","search","substr","store","element","body","ReactDOMServer","renderToString","send","template"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAE5B;AACA;AACA;AACA,QAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAChBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADF,CAApB;AAIA,MAAIG,WAAJ;;AACA,MAAIN,WAAW,IAAIA,WAAW,CAACO,SAAZ,CAAsBC,SAAzC,EAAoD;AAChD;AACA,UAAMC,KAAK,GAAGL,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB,CAFgD,CAIhD;;AACA,UAAMU,KAAK,GAAGZ,GAAG,CAACa,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd,CALgD,CAOhD;;AACA,UAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAeZ,GAAG,CAACa,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AAEAJ,eAAW,GAAG,MAAMN,WAAW,CAACO,SAAZ,CAAsBC,SAAtB,CAAgCC,KAAhC,CAApB;AACH;;AACDM,uDAAK,CAACT,WAAN,GAAoBA,WAApB;AAEA,QAAMU,OAAO,gBACT,2DAAC,6DAAD;AAAc,YAAQ,EAAElB,GAAG,CAACa,GAA5B;AAAiC,WAAO,EAAE;AAA1C,kBACI,2DAAC,qDAAD,OADJ,CADJ;AAKA,QAAMM,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;AACAjB,KAAG,CAACqB,IAAJ,CAASC,4DAAQ,CAACJ,IAAD,EAAOX,WAAP,CAAjB;AACH;;AAEcT,qEAAf,E","file":"server.5d859e40cddae6adf12c.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter, matchPath } from 'react-router-dom';\n\nimport Page from '../src/Page.jsx';\nimport template from './template.js';\nimport store from '../src/store.js';\nimport routes from '../src/routes.js';\n\nasync function render(req, res) {\n\n    // to find the component that is being rendered (activeRoute)\n    // we use matchPatch from RRD to return the correct route\n    // which matches our current url (req.path)\n    const activeRoute = routes.find(\n        route => matchPath(req.path, route)\n    );\n\n    let initialData;\n    if (activeRoute && activeRoute.component.fetchData) {\n        // get the this.props.match to find the /edit/2 id from url, and send with fetchData function\n        const match = matchPath(req.path, activeRoute);\n\n        // get the index search query of the url\n        const index = req.url.indexOf('?');\n\n        // index -1 is given when there is no ? sign\n        const search = index !== -1 ? req.url.substr(index) : null;\n\n        initialData = await activeRoute.component.fetchData(match);\n    }\n    store.initialData = initialData;\n\n    const element = (\n        <StaticRouter location={req.url} context={{}}>\n            <Page />\n        </StaticRouter>\n    );\n    const body = ReactDOMServer.renderToString(element);\n    res.send(template(body, initialData));\n}\n\nexport default render;\n"],"sourceRoot":""}